%CRACK_DOMAIN_LARGE large crack domain (crack on the left) structured grid generator
%
% Crack domain generated: (-1,1)^2 \ (-1,0)x{0}.
% Grid defining data is saved to the file: datafiles/crack_grid.mat
%
%   TIFISS scriptfile: LR; 22 June 2018
% Copyright (c) 2018 A. Bespalov, L. Rocchi

% Global variables
  global slope1crack
  global slope2crack
  
% Fixed point of the slit Pf=(0,0) (the origin)  
  xf = 0.0;
  yf = 0.0;  
  
% The following variable 'yPstar' is half of the "height" of the slit occurring 
% on the line (-1,0)x{0}. The slit is then created by defining two points
% (see below)
% - P1 = (xP1,yP1) = (-1,-yPstar) 
% - P3 = (xP3,yP3) = (-1,+yPstar)
% which are connected with the "fixed" point of the crack Pf = (xf,yf) = (0,0), 
% i.e., the origin in this case. Hence: 
% - smaller values of yPstar -> smaller slit (default=0.005)
% - larger values of yPstar  -> large slit 
  yPstar = 0.005; 

% -------------------------------------------------------------------------  
% Line connecting P1 with Pf
% -------------------------------------------------------------------------
% Point P1=(-1,-yPstar) on the lower left vertical boundary 
  xP1 = -1.0;
  yP1 = -yPstar;  
  slope1crack = yP1/xP1;

% Second point along the line between P1 and the origin Pf
  xP2 = -0.5;
  yP2 = slope1crack*(xP2 - xP1) + yP1;

% -------------------------------------------------------------------------  
% Line connecting P2 with Pf
% -------------------------------------------------------------------------
% Point P3 on the upper left vertical boundary 
  xP3 = -1.0;
  yP3 = +yPstar;
  slope2crack = yP3/xP3;

% Second point along the line between P3 and the origin Pf 
  xP4 = -0.5;
  yP4 = slope2crack*(xP4 - xP3) + yP3;

% -------------------------------------------------------------------------
% Mesh
% -------------------------------------------------------------------------
% Vertices coordinates map
  xy = [-1.0000   -1.0000; ...
        -0.5000   -1.0000; ...
              0   -1.0000; ...
         0.5000   -1.0000; ...
         1.0000   -1.0000; ...
        -1.0000   -0.5000; ...
        -0.5000   -0.5000; ...
              0   -0.5000; ...
         0.5000   -0.5000; ...
         1.0000   -0.5000; ...
            xP1       yP1; ...  
            xP2       yP2; ...
             xf        yf; ...  
         0.5000         0; ...
         1.0000         0; ...
            xP3       yP3; ...  
            xP4       yP4; ...
        -1.0000    0.5000; ...
        -0.5000    0.5000; ...
            0.0    0.5000; ...
         0.5000    0.5000; ...
         1.0000    0.5000; ...
        -1.0000    1.0000; ...
        -0.5000    1.0000; ...
              0    1.0000; ...
         0.5000    1.0000; ...
         1.0000    1.0000]; 
    
% Elements map
  evt = [ 7     6     1; ...
          1     2     7; ...
          7     2     3; ...
          3     8     7; ...
          7     8    13; ...
         13    12     7; ...
          7    12    11; ...
         11     6     7; ...
          9     8     3; ...
          3     4     9; ...
          9     4     5; ...
          5    10     9; ...
          9    10    15; ...
         15    14     9; ...
          9    14    13; ...
         13     8     9; ...       
         19    18    16; ...
         16    17    19; ...
         19    17    13; ...
         13    20    19; ...
         19    20    25; ...
         25    24    19; ...
         19    24    23; ...
         23    18    19; ...       
         21    20    13; ...
         13    14    21; ...
         21    14    15; ...
         15    22    21; ...
         21    22    27; ...
         27    26    21; ...
         21    26    25; ...
         25    20    21];   

% Boundary elements/edges
  eboundt = [  1    1; ...
               2    3; ...
               3    1; ...
               6    3; ...
               7    1; ...
               8    3; ...
              10    3; ...
              11    1; ...
              12    3; ...
              13    1; ...
              17    1; ...
              18    3; ...
              19    1; ...
              22    3; ...
              23    1; ...
              24    3; ...
              28    3; ...
              29    1; ...
              30    3; ...
              31    1];
          
% Interior nodes
  interior = [7 8 9 14 19 20 21]';
  
% Boundary nodes
  totalnodes = 1:size(xy,1);
  bound = totalnodes(~ismember(totalnodes,interior))';

% How coarse the mesh has to be?
  nc = default('\nCoarse grid parameter: 2 for underlying 8x4 grid (default is 3 for 16x8)',3);
  if nc<1, error('Illegal parameter choice, try again.'); end
  
% Uniform refinements (if any)  
  for i = 2:(nc-1)
      [xy,evt,bound,interior,eboundt] = uniform_refinement(xy,evt,bound,eboundt,2);
  end

% Save data
  gohome; cd datafiles;
  save crack_grid.mat xy evt bound interior eboundt xP1 yP1 xP2 yP2 xf yf; 
 
% end scriptfile